!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n;"undefined"!=typeof window?n=window:"undefined"!=typeof global?n=global:"undefined"!=typeof self&&(n=self),n.cokescript=e()}}(function(){var e;return function n(e,r,t){function o(a,l){if(!r[a]){if(!e[a]){var u="function"==typeof require&&require;if(!l&&u)return u(a,!0);if(i)return i(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var s=r[a]={exports:{}};e[a][0].call(s.exports,function(n){var r=e[a][1][n];return o(r?r:n)},s,s.exports,n,e,r,t)}return r[a].exports}for(var i="function"==typeof require&&require,a=0;a<t.length;a++)o(t[a]);return o}({1:[function(e,n){"use strict";function r(){return S[S.length-1]}function t(){return S.push({}),S[S.length-1]}function o(){S=[{}],P=1,C=[0],R=0}function i(e,n){var r=n[n.length-1];if(!r||"\\"!==r.value)return e.match(/^#{/)?"#{":void 0}function a(e){if("VAR"===e.type)return'" + '+a(e.children[1])+' + "';if(void 0!==e.value)return e.value;var n,r="";if(!e.children)return"";for(n=0;n<e.children.length;n++)r+=a(e.children[n]);return r}function l(){return C[C.length-1]}function u(e){return e>l()?"indent":e<l()?"dedent":e===l()?"samedent":void 0}function c(e){return function(n){var r=n.match(/^\n[\s]*/);if(r){var t=r[0].split("\n"),o=t[t.length-1].length;if(u(o)===e)return"dedent"==e?(C.pop(),""):("indent"==e&&C.push(o),r[0])}}}function s(e){if('"'===e.charAt(0))for(var n=1;e.charAt(n);){var r=e.charAt(n);if("\\"===r)n++;else if('"'===r)return e.slice(0,n+1);n++}}function f(e){if("/"===e.charAt(0))for(var n=1;e.charAt(n);){var r=e.charAt(n);if("\\"===r)n++;else if("/"===r)return e.slice(0,n+1);n++}}function d(e){return 0===e.indexOf("def(")?"def":0===e.indexOf("def ")?"def":0===e.indexOf("def\n")?"def":0===e.indexOf("dom ")?"dom":void 0}function p(e){var n=e.match(/^#/);if(n)for(var r=n[0].length;e.charAt(r);){var t=e.charAt(r);if("\n"===t)return e.slice(0,r);r++}}function h(e){return e}function v(e){for(var n="",r=0;e>r;r++)n+=" ";return n}function m(e){return v(e?2*(R+e):2*R)}function E(){return"__c"+F}function A(){return F++,"__c"+F}function y(){return F--,"__c"+F}function _(e,n){if(w[e.type])return w[e.type](e);if(void 0!==e.value)return e.value;var r,t="";if(!e.children)return"";for(r=0;r<e.children.length;r++)t+=_(e.children[r],n);return t}function k(e){var n="\nmodule.exports = {";e=e||Object.keys(r());for(var t=0;t<e.length;t++)n+="\n  "+e[t]+": "+e[t]+",";return n+"\n}"}function g(e){o();var n=X.parse(e+"\n");if(!n.complete)throw new Error(n.hint);var t={ast:n,code:_(n),ns:r()};return t}var b=e("epegjs"),R=0,P=1,S=[{}],C=[0],T=[{key:"string",func:s},{key:"comment",func:p},{key:"function_def",func:d,verbose:"function definition"},{key:"class",reg:/^class /},{key:"ret",reg:/^return/,verbose:"return"},{key:"if",reg:/^if /},{key:"while",reg:/^while /},{key:"try",reg:/^try/},{key:"catch",reg:/^catch/},{key:"throw",reg:/^throw /},{key:"tag",reg:/^<[a-zA-Z][0-9a-zA-Z]{0,29}/},{key:">",reg:/^>/},{key:"elseif",reg:/^elseif /},{key:"else",reg:/^else/},{key:"for_loop",reg:/^for /,verbose:"for loop"},{key:"in",reg:/^in /},{key:"name",reg:/^[a-zA-Z_$][0-9a-zA-Z_$]{0,29}/},{key:"regexp",func:f,verbose:"regular epression"},{key:"math_operators",reg:/^(\+\+|\-\-)/,verbose:"math operator"},{key:"binary_operators",reg:/^(\&\&|\|\||\&|\||<<|\>\>)/,verbose:"binary operator"},{key:"comparison",reg:/^(<=|>=|<|>|!=|==)/},{key:"assign",reg:/^(\+=|-=|=|:=)/},{key:"number",reg:/^[0-9]+\.?[0-9]*/},{key:"comma",reg:/^\,/},{key:"dot",reg:/^\./},{key:"colon",reg:/^\:/,verbose:":"},{key:"open_par",reg:/^\(/,verbose:"("},{key:"close_par",reg:/^\)/,verbose:")"},{key:"open_bra",reg:/^\[/,verbose:"["},{key:"close_bra",reg:/^\]/,verbose:"]"},{key:"open_curly",reg:/^\{/,verbose:"{"},{key:"close_curly",reg:/^\}/,verbose:"}"},{key:"math",reg:/^[-|\+|\*|/|%]/},{key:"samedent",func:c("samedent"),verbose:"same indentation"},{key:"dedent",func:c("dedent")},{key:"indent",func:c("indent")},{key:"W",reg:/^[ ]/,verbose:"single whitespace"}],L=[{key:"start",func:i},{key:"end",reg:/^}/},{key:"name",reg:/^[a-zA-Z_$][0-9a-zA-Z_]{0,29}/},{key:"dot",reg:/^\./},{key:"char",reg:/^./}],M={START:{rules:["EL* EOF"]},EL:{rules:["VAR","char","name","start","end","dot"]},VAR:{rules:["start NAME end"]},NAME:{rules:["name dot NAME","name"]}},N=b.compileGrammar(M,L),O={START:{rules:["LINE* EOF"]},ELC:{rules:["W* comment"],verbose:"comment"},LINE:{rules:["STATEMENT ELC? samedent+","STATEMENT ELC? !dedent","ELC? samedent","ELC !dedent"],verbose:"new line"},BLOCK:{rules:["indent LINE+ dedent"]},STATEMENT:{rules:["ASSIGN","EXPR","IF","WHILE","FOR","RETURN","CLASS","TAG","DOM_ASSIGN","TRY_CATCH","THROW"]},CLASS_METHODS:{rules:["samedent* f:FUNC_DEF samedent*"],hooks:[function(e){return e.f}]},CLASS:{rules:["class n:name open_par p:name close_par indent m:CLASS_METHODS+ dedent","class n:name indent m:CLASS_METHODS+ dedent"],hooks:[function(e){return{name:e.n,methods:e.m,parent:e.p}},function(e){return{name:e.n,methods:e.m}}]},FUNC_DEF_PARAMS:{rules:["p1:FUNC_DEF_PARAMS comma W p2:FUNC_DEF_PARAMS","p1:name assign e:EXPR","p1:name"],verbose:"function parameters"},LAMBDA:{rules:["fd:function_def open_par params:FUNC_DEF_PARAMS? close_par W block:EXPR","fd:function_def W fn:name open_par params:FUNC_DEF_PARAMS? close_par W block:EXPR","fd:function_def W block:EXPR"],hooks:[h,h,h]},FUNC_DEF:{rules:["fd:function_def open_par params:FUNC_DEF_PARAMS? close_par block:BLOCK","fd:function_def W fn:name open_par params:FUNC_DEF_PARAMS? close_par block:BLOCK","fd:function_def W fn:name block:BLOCK","fd:function_def block:BLOCK"],hooks:[h,h,h,h],verbose:"function definition"},ELSE_IF:{rules:["samedent elseif e:EXPR b:BLOCK"],hooks:[h]},ELSE:{rules:["samedent else b:BLOCK"],hooks:[h]},IF:{rules:["if e:EXPR b:BLOCK elif:ELSE_IF* el:ELSE?"],hooks:[h]},ELSE_EXPR:{rules:["W else W b:EXPR"],hooks:[h]},IF_EXPR:{rules:["e:EXPR W if test:EXPR el:ELSE_EXPR?"],hooks:[h]},WHILE:{rules:["while e:EXPR b:BLOCK"],hooks:[h]},MATH:{rules:["e1:EXPR W op:math W e2:EXPR"]},PATH:{rules:["PATH dot name","PATH open_bra number close_bra","name"]},ASSIGN:{rules:["left:EXPR W op:assign W right:EXPR"],hooks:[h]},W_OR_SAMEDENT:{rules:["W","samedent"],verbose:"samedent or whitespace"},W_SAMEDENT_INDENT:{rules:["W","samedent","indent"],verbose:"indent or samedent or whitespace"},ANY_SPACE:{rules:["W","samedent","indent","dedent"],verbose:"any space"},FUNC_CALL_PARAMS:{rules:["EXPR comma ANY_SPACE+ FUNC_CALL_PARAMS ANY_SPACE*","EXPR ANY_SPACE*"]},FUNC_CALL:{rules:["open_par FUNC_CALL_PARAMS? close_par"]},TYPE:{rules:["name colon"]},FOR:{rules:["for_loop k:name comma W v:name W in t:TYPE? a:name b:BLOCK","for_loop v:name W in t:TYPE? a:name b:BLOCK"],hooks:[h,h]},COMMA_SEPARATED_EXPR:{rules:["EXPR comma ANY_SPACE+ COMMA_SEPARATED_EXPR ANY_SPACE*","EXPR ANY_SPACE*"]},ARRAY:{rules:["open_bra ANY_SPACE* c:COMMA_SEPARATED_EXPR? ANY_SPACE* close_bra"]},MEMBERS:{rules:["name colon W EXPR samedent? comma ANY_SPACE+ MEMBERS ANY_SPACE*","name colon W EXPR ANY_SPACE*"]},OBJECT:{rules:["open_curly indent? MEMBERS? close_curly"]},TAG_PARAMS:{rules:["left:TAG_PARAMS W right:TAG_PARAMS","n:name assign e:EXPR","n:name"],hooks:[h,h,h],verbose:"tag parameters"},TAG:{rules:["tag:tag W? params:TAG_PARAMS? end:>? block:BLOCK?"],hooks:[h]},DOM_ASSIGN:{rules:["assign EXPR"]},TRY_CATCH:{rules:["try b1:BLOCK samedent? catch open_par err:name? close_par b2:BLOCK"],hooks:[h]},THROW:{rules:["throw EXPR"]},RETURN:{rules:["ret W EXPR","ret"]},RIGHT_EXPR:{rules:["math_operators","W binary_operators W EXPR","W comparison W EXPR","W > W EXPR","dot EXPR","open_bra EXPR close_bra","FUNC_CALL"],verbose:"expression"},EXPR:{rules:["IF_EXPR","MATH","OBJECT","FUNC_DEF","EXPR RIGHT_EXPR","LAMBDA","number","regexp","open_par EXPR close_par","string","name","PATH","ARRAY"],verbose:"expression"}},F=1,w={dedent:function(){return R=Math.max(0,R-1),""},indent:function(){return R+=1,"\n"+m()},samedent:function(){return"\n"+m()},DOM_ASSIGN:function(e){var n=E();return n+".push(String("+_(e.children[1])+"))"},TAG_PARAMS:function(e){return e.children.left?_(e.children.left)+", "+_(e.children.right):e.children.e?e.children.n.value+":"+_(e.children.e):e.children.n.value+": true"},TAG:function(e){var n="",r="{",t=e.children.tag.value.substring(1);e.children.params&&(r+=_(e.children.params)),r+="}";var o="[]";return e.children.block&&(o=A(),n+="var "+E()+" = [];",n+=_(e.children.block),y()),n+="\n"+m(1)+E()+'.push(h("'+t+'", '+r+", "+o+"))"},CLASS:function(e){var n,o=e.children.name.value,i=e.children.methods,a=e.children.parent,l="",u=null;for(n=0;n<i.length;n++){var c=i[n].children,s=c.children.fn.value;"constructor"===s?u=c:l+="\n"+m()+o+".prototype."+s+" = "+_(c)}var f=r();f[o]=!0,f=t();var d=u&&u.children.params;d=d?_(d):"";var p=u&&u.children.block,h="var "+o+" = function "+o+"("+d+") {";h+="\n"+m(1)+"if(!(this instanceof "+o+")){ return new "+o+"("+Object.keys(f).join(",")+");}";for(var v in f)f[v]!==!0&&void 0!==f[v]&&(h+="\n"+m(1)+"if("+v+" === undefined) {"+v+" = "+_(f[v])+"};");return p&&(h+=_(p)),h+=m()+"\n}",a&&(h+="\n"+m()+o+".prototype = Object.create("+a.value+".prototype);",h+="\n"+m()+o+".prototype.constructor = "+o),S.pop(),h+l},LAMBDA:function(e){var n="",r=t();e.children.fn&&(n=e.children.fn.value,r[n]=!0);var o="function "+n+"(";e.children.params&&(o+=_(e.children.params,r)),o+=") {";for(var i in r)r[i]!==!0&&void 0!==r[i]&&(o+="\n"+m(1)+"if("+i+" === undefined) {"+i+" = "+_(r[i])+"};");return e.children.block&&(o+=" return "+_(e.children.block,r)),S.pop(),o+"; }"},FUNC_DEF:function(e){var n="",o=r(),i="dom"===e.children.fd.value;e.children.fn&&(n=e.children.fn.value,o[n]=!0),o=t();var a="function "+n+"(";e.children.params&&(a+=_(e.children.params)),a+=") {";for(var l in o)o[l]!==!0&&void 0!==o[l]&&(a+="\n"+m(1)+"if("+l+" === undefined) {"+l+" = "+_(o[l])+"};");return i&&(a+="\n"+m(1)+"var "+E()+" = [];"),e.children.block&&(a+=_(e.children.block)),S.pop(),i&&(a+="\n"+m(1)+"return "+E()+";"),a+"\n"+m()+"}"},FUNC_DEF_PARAMS:function(e){var n,t="",o=r();for("name"===e.children[0].type&&(o[e.children[0].value]=!0,e.children[1]&&"assign"===e.children[1].type&&(o[e.children[0].value]=e.children[2])),n=0;n<e.children.length;n++){var i=e.children[n];("name"===i.type||"FUNC_DEF_PARAMS"===i.type||"comma"===i.type||"window"===i.type)&&(t+=_(e.children[n]))}return t},ASSIGN:function(e){var n="",t=e.children.op.value,o=r();if("name"===e.children.left.children[0].type){var i=e.children.left.children[0];void 0===o[i.value]&&(":="==t?t="=":n="var ",o[i.value]=!0)}return n+_(e.children.left)+" "+t+" "+_(e.children.right)},STATEMENT:function(e){return _(e.children[0])+";"},IF:function(e){var n="";n="if("+_(e.children.e)+"){"+_(e.children.b)+"\n"+m()+"}";var r=e.children.elif;if(r)if(Array.isArray(r))for(var t=0;t<r.length;t++)n+=_(r[t]);else n+=_(r);return e.children.el&&(n+=_(e.children.el)),n},IF_EXPR:function(e){var n="";return n=_(e.children.test)+" ? "+_(e.children.e)+" : ",n+=e.children.el?_(e.children.el):"undefined"},ELSE_EXPR:function(e){return _(e.children.b)},WHILE:function(e){return"while("+_(e.children.e)+"){"+_(e.children.b)+"\n"+m()+"}"},FOR:function(e){var n="_index"+P,r="_keys"+P;P++;var t=!1;e.children.k&&(t=e.children.k.value);var o="var "+r+" = Object.keys("+e.children.a.value+");\n";return o+=m()+"for(var "+n+" = 0; "+n+" < "+r+".length; "+n+"++ ) {\n",t&&(o+=m(1)+"var "+t+" = "+r+"["+n+"];\n"),o+=m(1)+"var "+e.children.v.value+" = "+e.children.a.value+"["+r+"["+n+"]];",o+=_(e.children.b)+"\n"+m()+"}"},ELSE_IF:function(e){return" else if("+_(e.children.e)+") {"+_(e.children.b)+"\n"+m()+"}"},ELSE:function(e){return" else {"+_(e.children.b)+"\n"+m()+"}"},TRY_CATCH:function(e){var n="try {";return n+=_(e.children.b1),n+="\n"+m()+"} catch("+_(e.children.err)+") {",n+=_(e.children.b2),n+"\n"+m()+"}"},string:function(e){var n=e.value;n=n.replace(/\n/g,"\\n");var r=N.parse(n);if(!r.complete)throw new Error(r.hint);return a(r)},comment:function(e){return e.value.replace(/^#/g,"//")},comparison:function(e){return"=="==e.value?"===":"!="==e.value?"!==":e.value}},X=b.compileGrammar(O,T);n.exports={grammar:X,strGrammar:N,grammarDef:O,epegjs:b,tokenDef:T,generateModule:g,generateCode:_,generateExports:k}},{epegjs:2}],2:[function(n,r,t){(function(o){!function(n){if("object"==typeof t&&"undefined"!=typeof r)r.exports=n();else if("function"==typeof e&&e.amd)e([],n);else{var i;"undefined"!=typeof window?i=window:"undefined"!=typeof o?i=o:"undefined"!=typeof self&&(i=self),i.EPEG=n()}}(function(){return function e(r,t,o){function i(l,u){if(!t[l]){if(!r[l]){var c="function"==typeof n&&n;if(!u&&c)return c(l,!0);if(a)return a(l,!0);var s=new Error("Cannot find module '"+l+"'");throw s.code="MODULE_NOT_FOUND",s}var f=t[l]={exports:{}};r[l][0].call(f.exports,function(e){var n=r[l][1][e];return i(n?n:e)},f,f.exports,e,r,t,o)}return t[l].exports}for(var a="function"==typeof n&&n,l=0;l<o.length;l++)i(o[l]);return i}({1:[function(e,n){"use strict";function r(e,n){for(var r,t,o,i=n.tokenKeys,a=n.tokenMap,l=[],u=e.length,c=e,s=null,f=0;u>f;){for(r=null,t=0;t<i.length;t++){o=i[t];var d,p=a[o];if(p.func){if(d=p.func(e,l),void 0!==d){r=d;break}}else{if(!p.reg)throw new Error("Tokenizer error: Invalid token "+o+" without a reg or func property");if(d=e.match(p.reg),null!==d){r=d[0];break}}}if(null===r){if(0===l.length)throw new Error("Tokenizer error: total match failure");s&&(s.pointer+=s.value.length);var v=h(c,l[l.length-1],"Tokenizer error","No matching token found");throw s&&(v+="\nBefore token of type "+s.type+": "+s.value),new Error(v)}s={type:o,value:r,pointer:f},l.push(s),f+=r.length,e=e.substr(r.length)}return l.push({type:"EOF",value:""}),l}function t(e,n){var r={type:e.type,value:e.value,repeat:n.repeat};return n.name&&(r.name=n.name),r}function o(e){var n={},r=0;return e.map(function(e){e.name&&("*"==e.repeat||"+"==e.repeat?(n[e.name]||(n[e.name]=[]),n[e.name].push(e)):n[e.name]=e),n["$"+r]=e,r++}),n}function i(e,n,r,t,i){for(var a,l,u=!1,s=e[n.key].hooks[n.index];;){if(a=t,l=c(e,n,r,a),l===!1||l.sp<=i.sp)return u;s&&!l.hooked&&(l.children=s(o(l.children)),l.hooked=!0),l.hooked=!0,i.children=l.children,i.sp=l.sp,i.start=l.start,i.hooked=l.hooked,u=l}return u}function a(e,n,r,t){for(var o=n.key+";"+t+";"+n.index,i=A.length-1;i>=0;){if(A[i][0]==o)return!1;i-=1}var a=y[n.key+";"+t];if(void 0!==a)return a;A.push([o,n]);var l=c(e,n,r,t);return A.pop(),l}function l(e,n){return"*"===e.repeat||"?"===e.repeat?!0:"+"===e.repeat&&n.children.length&&n.children[n.children.length-1].type==e.type?!0:!1}function u(e){return"*"===e.repeat||"+"===e.repeat}function c(e,n,r,c){for(var s,f,d=c,p=0,h={type:n.key,children:[],start:c,name:n.name},v=n.tokens[p],m=r[d];v&&m;){if(e[v.type]){var E=e[v.type].rules,A=e[v.type].hooks;f=!1;var g=y[v.type+";"+d];if(g&&(f=g),!f)for(s=0;s<E.length;s++){var b=E[s],R=A&&A[s];if(f=a(e,b,r,d)){if(R&&!f.hooked&&(f.children=R(o(f.children))),f.hooked=!0,y[b.key+";"+d]=f,v.repeat===!1){var P=i(e,n,r,d,f);if(P!==!1)return P}break}}if(f)d=f.sp,h.children.push({type:v.type,children:f.children,sp:f.sp,name:v.name,repeat:v.repeat}),u(v)||p++;else{if(!l(v,h))return!1;p++}}else if(m.type===v.type)v.nonCapturing||(h.children.push(t(m,v)),d++),u(v)||p++;else{if(!l(v,h))return!1;p++}if(k===d&&_.candidates.push([n,n.tokens[p]]),d>k&&(_={sp:d,candidates:[[n,n.tokens[p]]]},k=d),v=n.tokens[p],m=r[d],void 0===v)return h.sp=d,h.rp=p,h;if(void 0===m)return l(v,h)?(h.sp=d,h.rp=p,h):!1}return!1}function s(e,n){return e.split(n).map(function(e){return e.trim()})}function f(e){var n="!"===e.charAt(0);n&&(e=e.substr(1));var r=e.charAt(e.length-1);"*"===r||"?"===r||"+"===r?e=e.substr(0,e.length-1):r=!1;var t,o=e.split(":");if(t=2===o.length?{type:o[1],name:o[0]}:{type:e},t.repeat=r,("*"===r||"+"===r)&&n)throw new Error("Impossible to have non capturing token that repeats");return n&&(t.nonCapturing=n),t}function d(e,n){var r,t,o,i,a=Object.keys(e),l={};l.tokenDef=n,l.tokenKeys=[],l.tokenMap={},n.map(function(e){l.tokenMap[e.key]=e,l.tokenKeys.push(e.key)});var u=a.concat(l.tokenKeys);for(r=0;r<a.length;r++){var c=e[a[r]],d=a[r],p=c.rules,h=[];for(t=0;t<p.length;t++){var v=s(p[t]," ");for(i=0,o=0;o<v.length;o++){var m=v[o]=f(v[o]);if(-1===u.indexOf(m.type)&&"EOF"!==m.type)throw new Error("Invalid token type used in the grammar rule "+d+": "+m.type+", valid tokens are: "+u.join(", "));if("*"===m.repeat&&(i+=1),m.nonCapturing&&v[v.length-1]!=v[o])throw new Error("A non capturing token can only be the last one in the rule: "+m.type)}if(i===v.length)throw new Error("Rule "+p[t]+" only has optional greedy tokens.");h.push({key:d,index:t,tokens:v})}l[d]={rules:h,hooks:c.hooks||[],verbose:c.verbose}}return l.parse=function(e){return E(e,l)},l}function p(e){for(var n="",r=0;e>r;r++)n+=" ";return n}function h(e,n,r,t){var o,i=n.pointer||0,a=e.split("\n"),l=0,u=0;for(o=0;o<a.length&&(l+=a[o].length+1,!(l>=i));o++)u+=a[o].length+1;var c=Math.max(0,o),s=r+" at line "+(c+1)+" char "+(i-u)+": ",f="\n"+p(i-u+(c+": ").length);return void 0!==a[c-1]&&(s=s+"\n"+c+": "+a[c-1]),s=s+"\n"+(c+1)+": "+a[c]+f,s=s+"^-- "+t,void 0!==a[c+1]&&(s=s+"\n"+(c+2)+": "+a[c+1]),s}function v(e,n){var r=e.tokenMap[n];return r&&r.verbose?r.verbose:e[n]&&e[n].verbose?e[n].verbose:n}function m(e,n,r,t){if(!r||!r.candidates[0])return"Complete failure to parse";var o=r.candidates[0][0],i=[];r.candidates.map(function(e){if(e[1]){var n=v(t,e[1].type);-1===i.indexOf(n)&&i.push(n)}});var a=i.join(" or "),l=h(e,n[r.sp],"Parser error","Rule "+v(t,o.key));l=l+"\nExpect "+a;var u=n[r.sp]||{type:"EOF"};return l=l+"\nBut got "+v(t,u.type)+" instead"}function E(e,n){var t,o,i,l={type:"START",sp:0,complete:!1};for(i=r(e,n),_={sp:0,candidates:[]},k=0,t=0;t<n.START.rules.length;t++)A=[],y={},o=a(n,n.START.rules[t],i,0),o&&o.sp>l.sp&&(l={type:"START",children:o.children,sp:o.sp,complete:o.sp===i.length,inputLength:i.length});return l.bestParse=_,_&&!l.complete&&(l.hint=m(e,i,_,n)),l}var A=[],y={},_=null,k=0;n.exports={parse:E,stack:A,compileGrammar:d,tokenize:r,memoization:y}},{}]},{},[1])(1)})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1])(1)});